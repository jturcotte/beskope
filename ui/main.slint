import { VerticalBox, Slider, HorizontalBox, GroupBox } from "std-widgets.slint";

export global Configuration {
    callback changed();

    in-out property<color> fill_color: Colors.rgba(32, 32, 32, 0.7);
}

component LabeledSlider {
    in-out property<float> value <=> slider.value;
    in property<string> label <=> text.text;
    in property<float> minimum <=> slider.minimum;
    in property<float> maximum <=> slider.maximum;
    callback changed(float);
    HorizontalBox {
        text := Text {
            vertical-alignment: TextVerticalAlignment.center;
        }
        slider := Slider {
            changed(value) => { changed(value) }
        }
        Text {
            width: 10%;
            text: round(value*100)/100;
            vertical-alignment: TextVerticalAlignment.center;
            horizontal-alignment: TextHorizontalAlignment.left;
        }
    }
}
export component ConfigurationWindow inherits Window {
    property<float> h <=> h_slider.value;
    property<float> s <=> s_slider.value;
    property<float> v <=> v_slider.value;
    property<float> a <=> a_slider.value;
    function update_configuration() {
        Configuration.fill_color = Colors.hsv(h, s, v, a);
        Configuration.changed();
    }

    preferred-width: 800px;
    preferred-height: 600px;

    HorizontalBox {
        GroupBox {
            title: "Fill color";
            VerticalBox {
                h_slider := LabeledSlider {
                    label: "H";
                    value: Configuration.fill_color.to_hsv().hue;
                    maximum: 359.999;
                    changed(value) => { update_configuration() }
                }
                s_slider := LabeledSlider {
                    label: "S";
                    value: Configuration.fill_color.to_hsv().saturation;
                    maximum: 1.0;
                    changed(value) => { update_configuration() }
                }
                v_slider := LabeledSlider {
                    label: "V";
                    value: Configuration.fill_color.to_hsv().value;
                    maximum: 1.0;
                    changed(value) => { update_configuration() }
                }
                a_slider := LabeledSlider {
                    label: "A";
                    value: Configuration.fill_color.to_hsv().alpha;
                    maximum: 1.0;
                    changed(value) => { update_configuration() }
                }
            }
        }
    }
}
